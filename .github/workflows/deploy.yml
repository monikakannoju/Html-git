name: 🚀 CI/CD:Deploy Static Website to VM using Docker + Nginx

on:
  push:
    branches: [ "main" ]  # Run when you push to main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SERVER_IP: 135.235.195.123
      SERVER_USER: user_1

    steps:
    - name: 📦 Checkout repository
      uses: actions/checkout@v4

    - name: 🔑 Configure SSH
      run: |
        eval "$(ssh-agent -s)"
        echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -
        mkdir -p ~/.ssh
        ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

    - name: 🔍 Test SSH connection
      run: |
        ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "echo '✅ SSH connection successful from GitHub Actions!' && hostname && whoami"

    - name: 🐳 Deploy Docker static site
      run: |
        ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
        set -e

        echo "🔹 Creating deployment directory..."
        mkdir -p /home/$USER/static-site
        cd /home/$USER/static-site

        echo "🔹 Stopping any old container..."
        docker stop static-site || true
        docker rm static-site || true

        echo "🔹 Copying static HTML from repo..."
        rm -rf *
        mkdir -p html
        cd html

        cat > index.html <<'HTML'
        <!DOCTYPE html>
        <html>
        <head><title>Static Website</title></head>
        <body>
          <h1>🚀 CI/CD Static Website deployed via GitHub Actions!</h1>
          <p>Server: $(hostname)</p>
        </body>
        </html>
        HTML

        cd ..
        echo "🔹 Creating Dockerfile..."
        cat > Dockerfile <<'DOCKER'
        FROM nginx:alpine
        COPY html /usr/share/nginx/html
        EXPOSE 80
        DOCKER

        echo "🔹 Building Docker image..."
        docker build -t static-site .

        echo "🔹 Running container on port 80..."
        docker run -d --name static-site -p 80:80 static-site

        echo "✅ Deployment completed successfully!"
        EOF
