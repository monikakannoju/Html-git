name: üöÄ Deploy Static Website to VM

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  SERVER_IP: 135.235.195.123
  SERVER_USER: user_1
  APP_NAME: static-site
  DEPLOY_PATH: /home/user_1/static-site

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v3

    - name: üß© Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
    
    - name: üîç Test SSH Connection
      run: |
        ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "echo '‚úÖ SSH connection successful!' && hostname && whoami"
    
    - name: üìÇ Prepare Deployment Directory
      run: |
        ssh $SERVER_USER@$SERVER_IP "mkdir -p $DEPLOY_PATH"
    
    - name: üì§ Copy Files to Server
      run: |
        # Use rsync for more efficient transfer (only copies changed files)
        rsync -avz --delete \
          -e "ssh -o StrictHostKeyChecking=no" \
          ./Html-git/Html/ \
          $SERVER_USER@$SERVER_IP:$DEPLOY_PATH/
    
    - name: üöÄ Deploy Docker Container
      run: |
        ssh $SERVER_USER@$SERVER_IP << 'ENDSSH'
          set -e  # Exit on any error
          
          cd $DEPLOY_PATH
          
          echo "üõë Stopping old container..."
          docker stop $APP_NAME 2>/dev/null || echo "No container to stop"
          docker rm $APP_NAME 2>/dev/null || echo "No container to remove"
          
          echo "üßπ Cleaning up old images..."
          docker rmi $APP_NAME 2>/dev/null || echo "No old image to remove"
          
          echo "üî® Building new Docker image..."
          docker build -t $APP_NAME .
          
          echo "üöÄ Starting new container..."
          docker run -d \
            --name $APP_NAME \
            --restart unless-stopped \
            -p 80:80 \
            $APP_NAME
          
          echo "üîç Verifying deployment..."
          sleep 2
          if docker ps | grep -q $APP_NAME; then
            echo "‚úÖ Container is running successfully!"
            docker ps | grep $APP_NAME
          else
            echo "‚ùå Container failed to start!"
            docker logs $APP_NAME
            exit 1
          fi
          
          echo "üéâ Deployment Complete!"
ENDSSH
    
    - name: üìä Deployment Summary
      if: success()
      run: |
        echo "### üéâ Deployment Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Server:** $SERVER_IP" >> $GITHUB_STEP_SUMMARY
        echo "- **Application:** $APP_NAME" >> $GITHUB_STEP_SUMMARY
        echo "- **Status:** Running on port 80" >> $GITHUB_STEP_SUMMARY
        echo "- **URL:** http://$SERVER_IP" >> $GITHUB_STEP_SUMMARY
    
    - name: üö® Deployment Failed
      if: failure()
      run: |
        echo "### ‚ùå Deployment Failed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Check the logs above for details." >> $GITHUB_STEP_SUMMARY
